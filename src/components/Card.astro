---
import { Image } from "astro:assets";

interface Props {
  image: string | ImageMetadata | any;
  alt: string;
  title: string;
  action?: string;
  link?: string;
  direction: "row" | "column";
  accent: "left" | "right";
  background: string;
}

const {
  image,
  alt = "imagem",
  title,
  action = "",
  link = "",
  direction = "row",
  background,
  accent = "left",
} = Astro.props;
const titleClasses = "text-2xl font-bold";
---

<div
  class:list={[
    "flex items-center justify-around md:p-5 md:px-[4%] md:py-8 first:rounded-t-4xl last:rounded-bl-4xl last:rounded-br-4xl w-full flex-col",
    direction === "row" ? "md:flex-row" : "md:flex-col",
  ]}
  style={{ backgroundColor: background }}
>
  {direction == "column" && <p class={titleClasses}>{title}</p>}
  <div
    class:list={[
      "flex gap-10 md:flex items-center flex-col",
      accent == "left" ? "md:flex-row-reverse" : "md:flex-row",
    ]}
  >
    <div
      class:list={[
        "flex rounded-4xl overflow-hidden shadow-md h-[100px] md:max-h-auto bg-white md:aspect-video min-h-80 w-full flex-1",
      ]}
    >
      {
        image != "" ? (
          <Image
            src={image}
            alt={alt}
            inferSize={true}
            class="rounded-4xl object-fit h-full w-full object-cover"
          />
        ) : (
          <div class="mix-blend-exclusion w-full h-full" />
        )
      }
    </div>
    <div class="flex flex-col gap-4 flex-1">
      {direction == "row" && <p class={titleClasses}>{title}</p>}
      <slot />
      {
        direction == "row" && action != "" && link != "" && (
          <a href={link} class="cursor-pointer">
            <button>{action}</button>
          </a>
        )
      }
    </div>
  </div>
  {
    direction == "column" && action != "" && link != "" && (
      <a href={link} class="cursor-pointer">
        <button>{action}</button>
      </a>
    )
  }
</div>